---
// Import supprimé car on utilise maintenant /rendez-vous

const quickLinks = [
	{ text: 'Particuliers', href: '/particuliers', icon: 'heart' },
	{ text: 'Entreprise', href: '/entreprise', icon: 'briefcase' },
	{ text: 'Blog', href: '/blog', icon: 'user' },
	{ text: 'Contact', href: '/contact', icon: 'email' },
	{ text: 'RDV', href: '/rendez-vous', icon: 'calendar' },
];
---

<div class="fixed bottom-6 left-6 z-40 md:block" id="quick-nav">
	<div class="flex flex-col space-y-3">
		<!-- Liens rapides (se déplient vers le haut) -->
		<div class="flex flex-col space-y-2 opacity-0 pointer-events-none transition-all duration-300" id="quick-links">
			{quickLinks.map((link, index) => (
				<a 
					href={link.href}
					class="w-12 h-12 bg-white text-gray-700 rounded-full shadow-lg hover:shadow-xl transition-all duration-300 flex items-center justify-center group hover:scale-110 hover:text-primary-600"
					data-index={index}
					title={link.text}
				>
					<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						{link.icon === 'heart' && (
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
						)}
						{link.icon === 'briefcase' && (
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
						)}
						{link.icon === 'user' && (
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
						)}
						{link.icon === 'email' && (
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
						)}
						{link.icon === 'calendar' && (
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
						)}
					</svg>
				</a>
			))}
			
			<!-- Bouton Calendly -->
			<a 
				href="/rendez-vous"
				class="w-12 h-12 bg-green-500 text-white rounded-full shadow-lg hover:shadow-xl transition-all duration-300 flex items-center justify-center group hover:scale-110 hover:bg-green-600"
				title="Prendre rendez-vous"
			>
				<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
				</svg>
			</a>
		</div>

		<!-- Bouton principal -->
		<button 
			class="w-14 h-14 bg-gradient-to-r from-primary-600 to-secondary-600 text-white rounded-full shadow-lg hover:shadow-xl transition-all duration-300 flex items-center justify-center group"
			id="quick-nav-toggle"
			aria-label="Menu rapide"
		>
			<svg class="w-6 h-6 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24" id="quick-nav-icon">
				<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
			</svg>
		</button>
	</div>
</div>

<!-- Menu mobile sticky en bas -->
<div class="md:hidden fixed bottom-0 left-0 right-0 z-50 bg-white border-t border-gray-200 shadow-lg" id="mobile-nav">
	<div class="flex justify-around items-center py-3 px-4">
		{quickLinks.map((link) => (
			<a 
				href={link.href}
				class="flex flex-col items-center space-y-1 text-gray-600 hover:text-primary-600 transition-colors duration-200"
				title={link.text}
			>
				<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
					{link.icon === 'heart' && (
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
					)}
					{link.icon === 'briefcase' && (
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
					)}
					{link.icon === 'user' && (
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
					)}
					{link.icon === 'email' && (
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
					)}
					{link.icon === 'calendar' && (
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
					)}
				</svg>
				<span class="text-xs font-medium">{link.text}</span>
			</a>
		))}
		
		<!-- Bouton Calendly mobile -->
		<a 
			href="/rendez-vous"
			class="flex flex-col items-center space-y-1 text-green-600 hover:text-green-700 transition-colors duration-200"
			title="Prendre rendez-vous"
		>
			<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
				<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
			</svg>
			<span class="text-xs font-medium">RDV</span>
		</a>
	</div>
</div>

<script>
	import { gsap } from 'gsap';

	// Attendre que le DOM soit chargé
	document.addEventListener('DOMContentLoaded', () => {
		const quickNavToggle = document.getElementById('quick-nav-toggle');
		const quickLinks = document.getElementById('quick-links');
		const quickNavIcon = document.getElementById('quick-nav-icon');
		let isOpen = false;

		// Vérifier que les éléments existent
		if (!quickNavToggle || !quickLinks || !quickNavIcon) return;

		quickNavToggle.addEventListener('click', () => {
			isOpen = !isOpen;
			
			if (isOpen) {
				// Ouvrir le menu
				gsap.to(quickLinks, {
					opacity: 1,
					pointerEvents: 'auto',
					duration: 0.3,
					ease: "power2.out"
				});
				
				// Animation des liens (vers le haut)
				gsap.fromTo(quickLinks.children, 
					{ 
						scale: 0, 
						opacity: 0,
						y: 20
					},
					{ 
						scale: 1, 
						opacity: 1,
						y: 0,
						duration: 0.4, 
						stagger: 0.1, 
						ease: "back.out(1.7)"
					}
				);
				
				// Rotation de l'icône
				gsap.to(quickNavIcon, {
					rotation: 180,
					duration: 0.3
				});
			} else {
				// Fermer le menu
				gsap.to(quickLinks, {
					opacity: 0,
					pointerEvents: 'none',
					duration: 0.3,
					ease: "power2.in"
				});
				
				// Reset de l'icône
				gsap.to(quickNavIcon, {
					rotation: 0,
					duration: 0.3
				});
			}
		});

		// Animation au hover des liens
		document.querySelectorAll('#quick-links a').forEach(link => {
			link.addEventListener('mouseenter', () => {
				gsap.to(link, {
					scale: 1.1,
					duration: 0.2,
					ease: "power2.out"
				});
			});
			
			link.addEventListener('mouseleave', () => {
				gsap.to(link, {
					scale: 1,
					duration: 0.2,
					ease: "power2.out"
				});
			});
		});

		// Masquer le menu au scroll
		let scrollTimeout: ReturnType<typeof setTimeout>;
		window.addEventListener('scroll', () => {
			if (isOpen) {
				clearTimeout(scrollTimeout);
				scrollTimeout = setTimeout(() => {
					isOpen = false;
					gsap.to(quickLinks, {
						opacity: 0,
						pointerEvents: 'none',
						duration: 0.3
					});
					gsap.to(quickNavIcon, {
						rotation: 0,
						duration: 0.3
					});
				}, 1000);
			}
		});
	});
</script>

<style>
	/* Animation d'entrée du composant */
	#quick-nav {
		animation: slideInLeft 0.6s ease-out 1s both;
	}

	@keyframes slideInLeft {
		from {
			transform: translateX(-100px);
			opacity: 0;
		}
		to {
			transform: translateX(0);
			opacity: 1;
		}
	}

	/* Responsive */
	@media (max-width: 768px) {
		#quick-nav {
			display: none;
		}
		
		#mobile-nav {
			animation: slideUp 0.6s ease-out 1s both;
		}
		
		@keyframes slideUp {
			from {
				transform: translateY(100%);
				opacity: 0;
			}
			to {
				transform: translateY(0);
				opacity: 1;
			}
		}
	}
</style> 