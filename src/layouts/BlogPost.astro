---
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
import AnimatedSection from '../components/AnimatedSection.astro';
import FormattedDate from '../components/FormattedDate.astro';
import BaseLayout from './BaseLayout.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---

<BaseLayout title={title} description={description}>
		
		<!-- Hero Section -->
		{heroImage && (
			<section class="relative min-h-[60vh] flex items-center justify-center overflow-hidden">
				<div class="absolute inset-0">
					<Image 
						width={1920} 
						height={1080} 
						src={heroImage} 
						alt={title}
						class="w-full h-full object-cover"
					/>
					<!-- Overlay amélioré pour garantir la lisibilité -->
					<div class="absolute inset-0 bg-gradient-to-b from-black/70 via-black/50 to-black/80"></div>
				</div>
				<div class="relative z-10 text-center text-white max-w-4xl mx-auto px-6">
					<AnimatedSection trigger="load" delay={0.2}>
						<div class="inline-flex items-center px-4 py-2 bg-white/20 backdrop-blur-sm rounded-full text-sm font-medium mb-6 border border-white/20">
							<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
							</svg>
							<FormattedDate date={pubDate} />
							{updatedDate && (
								<>
									<span class="mx-2">•</span>
									<span>Mis à jour le <FormattedDate date={updatedDate} /></span>
								</>
							)}
						</div>
					</AnimatedSection>
					<AnimatedSection trigger="load" delay={0.4}>
						<h1 class="text-4xl md:text-5xl lg:text-6xl font-bold text-white mb-6 leading-tight drop-shadow-2xl">
							{title}
						</h1>
					</AnimatedSection>
					<AnimatedSection trigger="load" delay={0.6}>
						<p class="text-xl md:text-2xl text-gray-200 max-w-3xl mx-auto leading-relaxed drop-shadow-lg">
							{description}
						</p>
					</AnimatedSection>
				</div>
				<div class="absolute bottom-0 left-0 right-0 h-20 bg-gradient-to-t from-white to-transparent"></div>
			</section>
		)}

		<!-- Article Content -->
		<section class="section-padding bg-white">
			<div class="container-max">
				<AnimatedSection trigger="scroll" delay={0.2}>
					<article class="max-w-4xl mx-auto">
						{!heroImage && (
							<div class="text-center mb-16">
								<AnimatedSection trigger="load" delay={0.2}>
									<div class="inline-flex items-center px-4 py-2 bg-primary-50 text-primary-700 rounded-full text-sm font-medium mb-6">
										<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
										</svg>
										<FormattedDate date={pubDate} />
										{updatedDate && (
											<>
												<span class="mx-2">•</span>
												<span>Mis à jour le <FormattedDate date={updatedDate} /></span>
											</>
										)}
									</div>
								</AnimatedSection>
								<AnimatedSection trigger="load" delay={0.4}>
									<h1 class="text-4xl md:text-5xl lg:text-6xl font-bold text-gray-900 mb-6 leading-tight bg-white px-6 py-4 rounded-xl shadow-sm">
										{title}
									</h1>
								</AnimatedSection>
								<AnimatedSection trigger="load" delay={0.6}>
									<p class="text-xl md:text-2xl text-gray-600 max-w-3xl mx-auto leading-relaxed bg-white px-6 py-4 rounded-xl shadow-sm">
										{description}
									</p>
								</AnimatedSection>
							</div>
						)}
						
						<div class="prose prose-lg md:prose-xl max-w-none prose-headings:text-gray-900 prose-headings:font-bold prose-h2:text-3xl prose-h2:mt-12 prose-h2:mb-6 prose-h3:text-2xl prose-h3:mt-8 prose-h3:mb-4 prose-p:text-gray-700 prose-p:leading-relaxed prose-p:mb-6 prose-a:text-primary-600 prose-a:font-medium prose-a:no-underline hover:prose-a:text-primary-700 prose-strong:text-gray-900 prose-strong:font-semibold prose-blockquote:border-l-4 prose-blockquote:border-primary-500 prose-blockquote:bg-primary-50 prose-blockquote:py-4 prose-blockquote:px-6 prose-blockquote:rounded-r-lg prose-blockquote:italic prose-blockquote:text-gray-700 prose-ul:list-disc prose-ul:pl-6 prose-ol:list-decimal prose-ol:pl-6 prose-li:text-gray-700 prose-li:mb-2">
							<slot />
						</div>
						
						<!-- Table of Contents (auto-generated) -->
						<div class="mt-16 p-6 bg-gray-50 rounded-xl border border-gray-200">
							<h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
								<svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 10h16M4 14h16M4 18h16" />
								</svg>
								Sommaire
							</h3>
							<div id="toc" class="space-y-2 text-sm">
								<!-- Auto-generated by JavaScript -->
							</div>
						</div>
						
						<!-- Article Footer -->
						<div class="mt-16 pt-8 border-t border-gray-200">
							<div class="flex flex-col md:flex-row items-center justify-between gap-6">
								<div class="flex items-center space-x-4">
									<a href="/blog" class="inline-flex items-center px-4 py-2 text-gray-600 hover:text-primary-600 font-medium transition-colors duration-200">
										<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
										</svg>
										Retour au blog
									</a>
									<div class="hidden md:block w-px h-6 bg-gray-300"></div>
									<div class="text-sm text-gray-500">
										<FormattedDate date={pubDate} />
									</div>
								</div>
								<div class="flex items-center space-x-4">
									<button id="shareBtn" class="inline-flex items-center px-4 py-2 text-gray-600 hover:text-primary-600 font-medium transition-colors duration-200">
										<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z" />
										</svg>
										Partager
									</button>
									<a href="/rendez-vous" class="btn-primary">
										Prendre rendez-vous
									</a>
								</div>
							</div>
						</div>
					</article>
				</AnimatedSection>
			</div>
		</section>

		<!-- Related Articles Section -->
		<section class="section-padding bg-gray-50">
			<div class="container-max">
				<AnimatedSection trigger="scroll" delay={0.2}>
					<div class="text-center mb-12">
						<h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
							Articles similaires
						</h2>
						<p class="text-xl text-gray-600 max-w-2xl mx-auto">
							Découvrez d'autres articles qui pourraient vous intéresser
						</p>
					</div>
					<div id="relatedArticles" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
						<!-- Auto-generated by JavaScript -->
					</div>
				</AnimatedSection>
			</div>
		</section>

</BaseLayout>

<script>
	// Auto-generate Table of Contents
	function generateTOC() {
		const headings = document.querySelectorAll('h2, h3');
		const toc = document.getElementById('toc');
		
		if (!toc || headings.length === 0) return;
		
		const tocItems = Array.from(headings).map((heading, index) => {
			const id = `heading-${index}`;
			heading.id = id;
			
			const level = heading.tagName === 'H2' ? 2 : 3;
			const indent = level === 3 ? 'ml-4' : '';
			
			return `
				<a href="#${id}" class="block ${indent} text-gray-600 hover:text-primary-600 transition-colors duration-200 py-1">
					${heading.textContent}
				</a>
			`;
		}).join('');
		
		toc.innerHTML = tocItems;
	}
	
	// Share functionality
	function setupShare() {
		const shareBtn = document.getElementById('shareBtn');
		if (!shareBtn) return;
		
		shareBtn.addEventListener('click', () => {
			if (navigator.share) {
				const description = document.querySelector('meta[name="description"]')?.getAttribute('content') || '';
				navigator.share({
					title: document.title,
					text: description,
					url: window.location.href
				} as ShareData);
			} else {
				// Fallback: copy to clipboard
				navigator.clipboard.writeText(window.location.href).then(() => {
					// Show toast or alert
					alert('Lien copié dans le presse-papiers !');
				});
			}
		});
	}
	
	// Smooth scroll for TOC links
	function setupSmoothScroll() {
		document.querySelectorAll('#toc a').forEach(link => {
			link.addEventListener('click', (e) => {
				e.preventDefault();
				const targetId = link.getAttribute('href')?.substring(1);
				const target = document.getElementById(targetId);
				if (target) {
					target.scrollIntoView({ behavior: 'smooth', block: 'start' });
				}
			});
		});
	}
	
	// Initialize
	document.addEventListener('DOMContentLoaded', () => {
		generateTOC();
		setupShare();
		setupSmoothScroll();
	});
</script>

<style>
	/* Custom scrollbar for better UX */
	.prose::-webkit-scrollbar {
		width: 6px;
	}
	
	.prose::-webkit-scrollbar-track {
		background: #f1f5f9;
	}
	
	.prose::-webkit-scrollbar-thumb {
		background: #cbd5e1;
		border-radius: 3px;
	}
	
	.prose::-webkit-scrollbar-thumb:hover {
		background: #94a3b8;
	}
	
	/* Enhanced typography */
	.prose h2 {
		position: relative;
		padding-left: 1rem;
	}
	
	.prose h2::before {
		content: '';
		position: absolute;
		left: 0;
		top: 0.5rem;
		bottom: 0.5rem;
		width: 4px;
		background: linear-gradient(135deg, #3b82f6, #8b5cf6);
		border-radius: 2px;
	}
	
	/* Code blocks styling */
	.prose pre {
		background: #1e293b;
		border-radius: 0.75rem;
		padding: 1.5rem;
		overflow-x: auto;
	}
	
	.prose code {
		background: #f1f5f9;
		padding: 0.25rem 0.5rem;
		border-radius: 0.375rem;
		font-size: 0.875em;
	}
	
	.prose pre code {
		background: none;
		padding: 0;
		color: #e2e8f0;
	}
	
	/* Enhanced drop shadows for better text readability */
	.drop-shadow-2xl {
		filter: drop-shadow(0 25px 25px rgb(0 0 0 / 0.15));
	}
	
	.drop-shadow-lg {
		filter: drop-shadow(0 10px 8px rgb(0 0 0 / 0.04)) drop-shadow(0 4px 3px rgb(0 0 0 / 0.1));
	}
</style>
