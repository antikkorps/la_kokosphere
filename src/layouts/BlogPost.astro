---
import AnimatedSection from '../components/AnimatedSection.astro';
import FormattedDate from '../components/FormattedDate.astro';
import BaseLayout from './BaseLayout.astro';
import SanityContent from '../components/SanityContent.astro';
import { getPosts } from '../lib/sanity';

// Fonction pour construire l'URL d'une image Sanity
function buildImageUrl(imageRef: string, width = 1200, height = 800): string {
  if (!imageRef) return "";
  
  const projectId = process.env.SANITY_STUDIO_PROJECT_ID || "j41wv78y";
  const dataset = process.env.SANITY_STUDIO_DATASET || "production";
  
  // Nettoyer la référence
  const cleanRef = imageRef
    .replace("image-", "")
    .replace("-jpg", ".jpg")
    .replace("-png", ".png")
    .replace("-webp", ".webp");

  return `https://cdn.sanity.io/images/${projectId}/${dataset}/${cleanRef}?w=${width}&h=${height}&fit=crop&auto=format`;
}

interface Props {
  _id: string;
  title: string;
  description: string;
  pubDate: Date;
  tags?: string[];
  mainImage?: {
    _ref: string;
    url?: string;
  };
  author?: {
    name: string;
    image?: {
      asset: {
        _ref: string;
      };
    };
    bio?: any[];
  };
}

interface RelatedPost {
  _id: string;
  title: string;
  description: string;
  publishedAt: string;
  slug: {
    current: string;
  };
  mainImage?: {
    _ref: string;
    url?: string;
  };
  tags?: string[];
  author?: {
    name: string;
    image?: {
      asset: {
        _ref: string;
      };
    };
    bio?: any[];
  };
}

const { _id, title, description, pubDate, tags, mainImage, author } = Astro.props;

// Récupérer les articles similaires basés sur les tags
let relatedPosts: RelatedPost[] = [];
if (tags && tags.length > 0) {
  const allPosts = await getPosts();
  relatedPosts = allPosts
    .filter((post: RelatedPost) => 
      post._id !== _id && // Exclure l'article actuel
      post.tags && 
      post.tags.some((tag: string) => tags.includes(tag))
    )
    .slice(0, 3); // Limiter à 3 articles
}
---

<BaseLayout title={title} description={description}>
		
		<!-- Hero Section avec image Sanity -->
		{mainImage && (
			<section class="relative min-h-[70vh] flex items-center justify-center overflow-hidden">
				<div class="absolute inset-0">
					<img 
						src={mainImage.url || buildImageUrl(mainImage._ref, 1920, 1080)} 
						alt={title}
						class="w-full h-full object-cover"
					/>
					<!-- Overlay amélioré pour plus de lisibilité -->
					<div class="absolute inset-0 bg-gradient-to-b from-black/80 via-black/60 to-black/90"></div>
				</div>
				<div class="relative z-10 text-center text-white max-w-5xl mx-auto px-6">
					<AnimatedSection trigger="load" delay={0.2}>
						<div class="inline-flex items-center px-6 py-3 bg-white/25 backdrop-blur-md rounded-full text-sm font-medium mb-8 border border-white/30 shadow-lg">
							<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
							</svg>
							<FormattedDate date={pubDate} />
						</div>
					</AnimatedSection>
					<AnimatedSection trigger="load" delay={0.4}>
						<h1 class="text-5xl md:text-6xl lg:text-7xl font-bold text-white mb-8 leading-tight drop-shadow-2xl">
							{title}
						</h1>
					</AnimatedSection>
					<AnimatedSection trigger="load" delay={0.6}>
						<p class="text-xl md:text-2xl lg:text-3xl text-gray-100 max-w-4xl mx-auto leading-relaxed drop-shadow-lg font-light">
							{description}
						</p>
					</AnimatedSection>
					{tags && tags.length > 0 && (
						<AnimatedSection trigger="load" delay={0.8}>
							<div class="flex flex-wrap justify-center gap-3 mt-8">
								{tags.map(tag => (
									<span class="inline-flex items-center px-4 py-2 bg-white/25 backdrop-blur-md rounded-full text-sm font-medium text-white border border-white/30 shadow-lg hover:bg-white/35 transition-all duration-300">
										#{tag}
									</span>
								))}
							</div>
						</AnimatedSection>
					)}
				</div>
				<div class="absolute bottom-0 left-0 right-0 h-32 bg-gradient-to-t from-white to-transparent"></div>
			</section>
		)}

		<!-- Article Content -->
		<section class="py-8 md:py-16 bg-white">
			<div class="container-max px-4 md:px-6 lg:px-8">
				<article class="max-w-4xl mx-auto">
					{!mainImage && (
						<div class="text-center mb-16">
							<div class="inline-flex items-center px-4 py-2 bg-primary-50 text-primary-700 rounded-full text-sm font-medium mb-6">
								<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
								</svg>
								<FormattedDate date={pubDate} />
							</div>
							<h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-6 leading-tight">
								{title}
							</h1>
							<p class="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed mb-8">
								{description}
							</p>
							{tags && tags.length > 0 && (
								<div class="flex flex-wrap justify-center gap-2">
									{tags.map(tag => (
										<span class="inline-flex items-center px-3 py-1 bg-gray-100 text-gray-700 rounded-full text-sm font-medium">
											#{tag}
										</span>
									))}
								</div>
							)}
						</div>
					)}
					
					<!-- Contenu de l'article simplifié -->
					<div class="prose prose-lg max-w-none px-4 md:px-0 prose-headings:text-gray-900 prose-headings:font-bold blog-typography">
						<slot />
					</div>
		
		<!-- Article Footer simplifié -->
		<div class="mt-12 pt-8 border-t border-gray-100">
			<div class="max-w-3xl mx-auto">
				<div class="flex flex-col sm:flex-row items-center justify-between gap-4">
					<div class="flex items-center gap-4">
						<a href="/blog" class="inline-flex items-center px-3 py-2 text-gray-600 hover:text-primary-600 font-medium transition-colors duration-200 text-sm">
							<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
							</svg>
							Retour au blog
						</a>
						<div class="text-sm text-gray-500">
							<FormattedDate date={pubDate} />
						</div>
					</div>
					<button id="shareBtn" class="inline-flex items-center px-3 py-2 text-gray-600 hover:text-primary-600 font-medium transition-colors duration-200 text-sm">
						<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z" />
						</svg>
						Partager
					</button>
				</div>
			</div>
		</div>

		<!-- Section Auteur -->
		{author && (
			<div class="mt-16 pt-12 border-t border-gray-200">
				<div class="max-w-3xl mx-auto">
					<AnimatedSection trigger="scroll" delay={0.2}>
						<div class="bg-gradient-to-r from-primary-50 to-secondary-50 rounded-3xl p-8 border border-primary-100 shadow-lg">
							<div class="flex flex-col md:flex-row items-center gap-6">
								{author.image ? (
									<div class="flex-shrink-0">
										<div class="w-20 h-20 rounded-full overflow-hidden shadow-lg border-4 border-white transform rotate-3 hover:rotate-0 transition-transform duration-300">
											<img 
												src={buildImageUrl(author.image.asset._ref, 160, 160)} 
												alt={`Photo de ${author.name}`}
												class="w-full h-full object-cover"
												loading="lazy"
											/>
										</div>
									</div>
								) : (
									<div class="flex-shrink-0">
										<div class="w-20 h-20 rounded-full bg-gradient-to-br from-primary-100 to-secondary-100 flex items-center justify-center shadow-lg border-4 border-white transform rotate-3 hover:rotate-0 transition-transform duration-300">
											<svg class="w-10 h-10 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
												<path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
											</svg>
										</div>
									</div>
								)}
								
								<div class="flex-1 text-center md:text-left">
									<div class="inline-flex items-center px-4 py-2 bg-white/80 backdrop-blur-sm rounded-full text-sm font-medium text-primary-700 mb-4 shadow-sm">
										<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
										</svg>
										Auteur de l'article
									</div>
									<h3 class="text-2xl font-bold text-gray-900 mb-2">
										{author.name}
									</h3>
									{author.bio && author.bio.length > 0 ? (
										<div class="text-gray-600 leading-relaxed prose prose-sm max-w-none">
											<SanityContent content={author.bio} />
										</div>
									) : (
										<p class="text-gray-600 leading-relaxed">
											Hypnothérapeute professionnelle passionnée par l'accompagnement humain et le bien-être. 
											Spécialisée dans les techniques modernes d'hypnose thérapeutique pour vous aider à 
											atteindre vos objectifs et surmonter vos difficultés.
										</p>
									)}
									
									<div class="flex flex-wrap justify-center md:justify-start gap-3 mt-6">
										<div class="flex items-center text-sm text-gray-500">
											<svg class="w-4 h-4 mr-2 text-primary-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
												<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
											</svg>
											Certifiée
										</div>
										<div class="flex items-center text-sm text-gray-500">
											<svg class="w-4 h-4 mr-2 text-primary-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
												<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
											</svg>
											Formation continue
										</div>
										<div class="flex items-center text-sm text-gray-500">
											<svg class="w-4 h-4 mr-2 text-primary-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
												<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
											</svg>
											Bienveillance
										</div>
									</div>
								</div>
								
								<div class="flex-shrink-0">
									<a href="/rendez-vous" class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-primary-600 to-primary-700 text-white hover:from-primary-700 hover:to-primary-800 font-medium rounded-lg transition-all duration-300 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5">
										<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
										</svg>
										Prendre RDV
									</a>
								</div>
							</div>
						</div>
					</AnimatedSection>
				</div>
			</div>
		)}
	</article>
</AnimatedSection>
</div>
</section>

<!-- Articles similaires simplifiés -->
{relatedPosts.length > 0 && (
	<section class="py-16 bg-gray-50">
		<div class="container-max">
			<div class="text-center mb-12">
				<h2 class="text-2xl md:text-3xl font-bold text-gray-900 mb-4">
					Articles similaires
				</h2>
				<p class="text-gray-600 max-w-2xl mx-auto">
					Découvrez d'autres articles qui pourraient vous intéresser
				</p>
			</div>
				<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-6xl mx-auto">
					{relatedPosts.map((post) => (
						<article class="bg-white rounded-lg shadow-sm border border-gray-100 hover:shadow-md transition-all duration-300 overflow-hidden h-full flex flex-col group">
								<a href={`/blog/${post.slug?.current || 'article'}/`} class="block h-full flex flex-col">
									{post.mainImage && (
										<div class="aspect-video overflow-hidden">
											<img 
												src={post.mainImage.url || buildImageUrl(post.mainImage._ref)} 
												alt={post.title}
												class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
											/>
										</div>
									)}
									
									<div class="p-6 flex-1 flex flex-col">
										<h3 class="text-lg font-semibold text-gray-900 mb-3 group-hover:text-primary-600 transition-colors duration-300 line-clamp-2">
											{post.title}
										</h3>
										<p class="text-gray-600 mb-4 line-clamp-3 text-sm flex-1">
											{post.description}
										</p>
										
										<div class="flex items-center justify-between mt-auto">
											<div class="text-sm text-gray-500">
												<FormattedDate date={new Date(post.publishedAt)} />
											</div>
											<div class="text-primary-600 font-medium text-sm group-hover:text-primary-700 transition-colors duration-300">
												Lire →
											</div>
										</div>
									</div>
								</a>
							</article>
					))}
				</div>
		</div>
	</section>
)}

</BaseLayout>

<script>
	// Share functionality
	function setupShare() {
		const shareBtn = document.getElementById('shareBtn');
		if (!shareBtn) return;
		
		shareBtn.addEventListener('click', () => {
			if (navigator.share) {
				const description = document.querySelector('meta[name="description"]')?.getAttribute('content') || '';
				navigator.share({
					title: document.title,
					text: description,
					url: window.location.href
				} as ShareData);
			} else {
				// Fallback: copy to clipboard
				navigator.clipboard.writeText(window.location.href).then(() => {
					// Show toast or alert
					alert('Lien copié dans le presse-papiers !');
				});
			}
		});
	}
	
	// Initialize
	document.addEventListener('DOMContentLoaded', () => {
		setupShare();
	});
</script>

<style>
	/* Styles spécifiques pour les articles de blog */
	.blog-typography {
		/* Override des styles globaux pour les titres dans les articles de blog */
	}
	
	.blog-typography h1 {
		font-family: "Inter", sans-serif !important;
		font-size: 1.875rem !important; /* text-3xl */
		line-height: 1.2;
		margin-bottom: 1rem;
		margin-top: 2rem;
	}
	
	@media (min-width: 640px) {
		.blog-typography h1 {
			font-size: 2.25rem !important; /* text-4xl */
		}
	}
	
	@media (min-width: 768px) {
		.blog-typography h1 {
			font-size: 2.5rem !important; /* text-5xl */
		}
	}
	
	.blog-typography h2 {
		font-family: "Inter", sans-serif !important;
		font-size: 1.5rem !important; /* text-2xl */
		line-height: 1.3;
		margin-top: 2rem;
		margin-bottom: 1rem;
		position: relative;
		padding-left: 1rem;
	}
	
	.blog-typography h2::before {
		content: '';
		position: absolute;
		left: 0;
		top: 0.25rem;
		bottom: 0.25rem;
		width: 4px;
		background: linear-gradient(135deg, #3b82f6, #8b5cf6);
		border-radius: 2px;
	}
	
	@media (min-width: 640px) {
		.blog-typography h2 {
			font-size: 1.75rem !important; /* text-3xl */
		}
	}
	
	@media (min-width: 768px) {
		.blog-typography h2 {
			font-size: 2rem !important; /* text-4xl */
		}
	}
	
	.blog-typography h3 {
		font-family: "Inter", sans-serif !important;
		font-size: 1.25rem !important; /* text-xl */
		line-height: 1.4;
		margin-top: 1.5rem;
		margin-bottom: 0.75rem;
	}
	
	@media (min-width: 640px) {
		.blog-typography h3 {
			font-size: 1.5rem !important; /* text-2xl */
		}
	}
	
	.blog-typography p {
		margin-bottom: 1.25rem;
		line-height: 1.7;
	}
	
	.blog-typography ul, .blog-typography ol {
		margin-bottom: 1.25rem;
		padding-left: 1.5rem;
	}
	
	.blog-typography li {
		margin-bottom: 0.5rem;
	}
	
	/* Code blocks styling */
	.blog-typography pre {
		background: #1e293b;
		border-radius: 0.75rem;
		padding: 1.5rem;
		overflow-x: auto;
		margin: 1.5rem 0;
	}
	
	.blog-typography code {
		background: #f1f5f9;
		padding: 0.25rem 0.5rem;
		border-radius: 0.375rem;
		font-size: 0.875em;
	}
	
	.blog-typography pre code {
		background: none;
		padding: 0;
		color: #e2e8f0;
	}
	
	/* Blockquote styling */
	.blog-typography blockquote {
		border-left: 4px solid #3b82f6;
		background: #f8fafc;
		padding: 1rem 1.5rem;
		margin: 1.5rem 0;
		font-style: italic;
		color: #475569;
		border-radius: 0 0.5rem 0.5rem 0;
	}
	
	/* Image styling */
	.blog-typography img {
		border-radius: 0.75rem;
		box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
		margin: 2rem 0;
	}
	
	/* Link styling */
	.blog-typography a {
		color: #3b82f6;
		font-weight: 500;
		text-decoration: none;
		transition: color 0.2s;
	}
	
	.blog-typography a:hover {
		color: #2563eb;
		text-decoration: underline;
	}
	
	/* Mobile-specific adjustments */
	@media (max-width: 767px) {
		.blog-typography {
			font-size: 0.95rem;
		}
		
		.blog-typography h1 {
			font-size: 1.5rem !important;
			margin-top: 1.5rem;
		}
		
		.blog-typography h2 {
			font-size: 1.25rem !important;
			margin-top: 1.5rem;
		}
		
		.blog-typography h3 {
			font-size: 1.125rem !important;
			margin-top: 1.25rem;
		}
		
		.blog-typography p {
			margin-bottom: 1rem;
		}
		
		.blog-typography pre {
			padding: 1rem;
			margin: 1rem 0;
		}
		
		.blog-typography blockquote {
			padding: 0.75rem 1rem;
			margin: 1rem 0;
		}
	}
</style>
